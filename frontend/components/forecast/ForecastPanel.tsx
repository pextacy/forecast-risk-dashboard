import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { ChartBarIcon, CpuChipIcon, TrendingUpIcon } from '@heroicons/react/24/outline';\nimport LoadingSpinner from '../ui/LoadingSpinner';\n\nexport default function ForecastPanel() {\n  const [selectedSymbol, setSelectedSymbol] = useState('bitcoin');\n  const [forecastHorizon, setForecastHorizon] = useState(30);\n  const [selectedModels, setSelectedModels] = useState(['arima', 'prophet']);\n  const [isGenerating, setIsGenerating] = useState(false);\n\n  const supportedSymbols = [\n    { id: 'bitcoin', name: 'Bitcoin (BTC)', icon: '₿' },\n    { id: 'ethereum', name: 'Ethereum (ETH)', icon: 'Ξ' },\n    { id: 'AAPL', name: 'Apple Inc.', icon: '🍎' },\n    { id: 'MSFT', name: 'Microsoft Corp.', icon: '🪟' },\n  ];\n\n  const models = [\n    { id: 'arima', name: 'ARIMA', description: 'Statistical time series model' },\n    { id: 'prophet', name: 'Prophet', description: 'Facebook\\'s forecasting tool' },\n    { id: 'ensemble', name: 'Ensemble', description: 'Combined model approach' },\n  ];\n\n  const handleGenerateForecast = async () => {\n    setIsGenerating(true);\n    \n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 3000));\n    \n    setIsGenerating(false);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-gray-900 flex items-center\">\n            <ChartBarIcon className=\"h-7 w-7 mr-2 text-blue-600\" />\n            AI Forecasting\n          </h2>\n          <p className=\"text-gray-600 mt-1\">\n            Generate 30-day price predictions using advanced machine learning models\n          </p>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Configuration Panel */}\n        <motion.div\n          initial={{ opacity: 0, x: -20 }}\n          animate={{ opacity: 1, x: 0 }}\n          className=\"bg-white rounded-lg shadow-soft border border-gray-200 p-6\"\n        >\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Forecast Configuration</h3>\n          \n          {/* Symbol Selection */}\n          <div className=\"mb-6\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Asset Symbol\n            </label>\n            <select\n              value={selectedSymbol}\n              onChange={(e) => setSelectedSymbol(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            >\n              {supportedSymbols.map((symbol) => (\n                <option key={symbol.id} value={symbol.id}>\n                  {symbol.icon} {symbol.name}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          {/* Forecast Horizon */}\n          <div className=\"mb-6\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Forecast Horizon: {forecastHorizon} days\n            </label>\n            <input\n              type=\"range\"\n              min=\"7\"\n              max=\"90\"\n              value={forecastHorizon}\n              onChange={(e) => setForecastHorizon(parseInt(e.target.value))}\n              className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"\n            />\n            <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n              <span>7 days</span>\n              <span>90 days</span>\n            </div>\n          </div>\n\n          {/* Model Selection */}\n          <div className=\"mb-6\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Models to Use\n            </label>\n            <div className=\"space-y-2\">\n              {models.map((model) => (\n                <label key={model.id} className=\"flex items-start\">\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedModels.includes(model.id)}\n                    onChange={(e) => {\n                      if (e.target.checked) {\n                        setSelectedModels([...selectedModels, model.id]);\n                      } else {\n                        setSelectedModels(selectedModels.filter(m => m !== model.id));\n                      }\n                    }}\n                    className=\"mt-1 h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                  />\n                  <div className=\"ml-3\">\n                    <div className=\"text-sm font-medium text-gray-900\">{model.name}</div>\n                    <div className=\"text-xs text-gray-500\">{model.description}</div>\n                  </div>\n                </label>\n              ))}\n            </div>\n          </div>\n\n          {/* Generate Button */}\n          <button\n            onClick={handleGenerateForecast}\n            disabled={isGenerating || selectedModels.length === 0}\n            className=\"w-full flex items-center justify-center px-4 py-3 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n          >\n            {isGenerating ? (\n              <>\n                <LoadingSpinner size=\"small\" color=\"white\" className=\"mr-2\" />\n                Generating Forecast...\n              </>\n            ) : (\n              <>\n                <CpuChipIcon className=\"h-5 w-5 mr-2\" />\n                Generate Forecast\n              </>\n            )}\n          </button>\n        </motion.div>\n\n        {/* Results Panel */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"lg:col-span-2 bg-white rounded-lg shadow-soft border border-gray-200 p-6\"\n        >\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4 flex items-center\">\n            <TrendingUpIcon className=\"h-5 w-5 mr-2 text-green-600\" />\n            Forecast Results\n          </h3>\n          \n          {isGenerating ? (\n            <div className=\"flex items-center justify-center h-64\">\n              <div className=\"text-center\">\n                <LoadingSpinner size=\"large\" />\n                <p className=\"mt-4 text-gray-600\">Generating AI forecast...</p>\n                <p className=\"text-sm text-gray-500\">This may take a few moments</p>\n              </div>\n            </div>\n          ) : (\n            <div className=\"text-center py-16\">\n              <ChartBarIcon className=\"mx-auto h-16 w-16 text-gray-300\" />\n              <h3 className=\"mt-4 text-lg font-medium text-gray-900\">\n                No Forecast Generated\n              </h3>\n              <p className=\"mt-2 text-gray-500\">\n                Configure your parameters and click \"Generate Forecast\" to create AI-powered predictions.\n              </p>\n            </div>\n          )}\n        </motion.div>\n      </div>\n\n      {/* Recent Forecasts */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ delay: 0.2 }}\n        className=\"bg-white rounded-lg shadow-soft border border-gray-200 p-6\"\n      >\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Recent Forecasts</h3>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {[1, 2, 3].map((i) => (\n            <div key={i} className=\"border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow\">\n              <div className=\"flex justify-between items-start mb-2\">\n                <div className=\"text-sm font-medium text-gray-900\">Bitcoin (BTC)</div>\n                <span className=\"text-xs bg-green-100 text-green-800 px-2 py-1 rounded-full\">87% Accuracy</span>\n              </div>\n              <div className=\"text-xs text-gray-500 mb-2\">30-day forecast • ARIMA + Prophet</div>\n              <div className=\"text-sm text-gray-600\">\n                Predicted: <span className=\"font-medium text-green-600\">+12.5%</span> growth\n              </div>\n              <div className=\"text-xs text-gray-400 mt-1\">Generated 2 hours ago</div>\n            </div>\n          ))}\n        </div>\n      </motion.div>\n    </div>\n  );\n}"