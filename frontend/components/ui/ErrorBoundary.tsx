import React, { Component, ReactNode } from 'react';\nimport { ExclamationTriangleIcon } from '@heroicons/react/24/outline';\n\ninterface Props {\n  children: ReactNode;\n  fallback?: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error?: Error;\n}\n\nexport default class ErrorBoundary extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: Error): State {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    console.error('ErrorBoundary caught an error:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      if (this.props.fallback) {\n        return this.props.fallback;\n      }\n\n      return (\n        <div className=\"min-h-64 flex items-center justify-center bg-gray-50 rounded-lg border border-gray-200\">\n          <div className=\"text-center p-8\">\n            <ExclamationTriangleIcon className=\"mx-auto h-12 w-12 text-red-400 mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n              Something went wrong\n            </h3>\n            <p className=\"text-sm text-gray-500 mb-4\">\n              {this.state.error?.message || 'An unexpected error occurred'}\n            </p>\n            <button\n              onClick={() => this.setState({ hasError: false, error: undefined })}\n              className=\"px-4 py-2 bg-primary-600 text-white text-sm font-medium rounded-lg hover:bg-primary-700 transition-colors\"\n            >\n              Try Again\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}"