import React from 'react';\nimport { motion } from 'framer-motion';\nimport {\n  TrendingUpIcon,\n  TrendingDownIcon,\n  ShieldCheckIcon,\n  ExclamationTriangleIcon,\n  CurrencyDollarIcon,\n  ChartBarIcon\n} from '@heroicons/react/24/outline';\nimport numeral from 'numeral';\n\ninterface OverviewData {\n  portfolioValue?: number;\n  portfolioChange?: number;\n  riskLevel?: string;\n  activeForecasts?: number;\n  accuracy?: number;\n  lastUpdate?: string;\n}\n\ninterface OverviewCardsProps {\n  data?: OverviewData;\n}\n\ninterface MetricCardProps {\n  title: string;\n  value: string | number;\n  change?: number;\n  icon: React.ComponentType<any>;\n  color: 'blue' | 'green' | 'red' | 'amber' | 'purple';\n  subtitle?: string;\n  trend?: 'up' | 'down' | 'neutral';\n}\n\nfunction MetricCard({ title, value, change, icon: Icon, color, subtitle, trend }: MetricCardProps) {\n  const colorClasses = {\n    blue: 'bg-blue-50 text-blue-600 border-blue-200',\n    green: 'bg-green-50 text-green-600 border-green-200',\n    red: 'bg-red-50 text-red-600 border-red-200',\n    amber: 'bg-amber-50 text-amber-600 border-amber-200',\n    purple: 'bg-purple-50 text-purple-600 border-purple-200'\n  };\n\n  const changeColor = change && change > 0 ? 'text-green-600' : change && change < 0 ? 'text-red-600' : 'text-gray-500';\n  const TrendIcon = trend === 'up' ? TrendingUpIcon : trend === 'down' ? TrendingDownIcon : null;\n\n  return (\n    <motion.div\n      whileHover={{ scale: 1.02 }}\n      className={`bg-white rounded-lg shadow-soft border border-gray-200 p-6 hover:shadow-medium transition-all duration-200`}\n    >\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex-1\">\n          <p className=\"text-sm font-medium text-gray-600\">{title}</p>\n          <div className=\"mt-2 flex items-baseline\">\n            <p className=\"text-2xl font-semibold text-gray-900\">{value}</p>\n            {change !== undefined && (\n              <div className={`ml-2 flex items-center text-sm ${changeColor}`}>\n                {TrendIcon && <TrendIcon className=\"h-4 w-4 mr-1\" />}\n                <span>{change > 0 ? '+' : ''}{change}%</span>\n              </div>\n            )}\n          </div>\n          {subtitle && (\n            <p className=\"mt-1 text-xs text-gray-500\">{subtitle}</p>\n          )}\n        </div>\n        <div className={`p-3 rounded-lg ${colorClasses[color]}`}>\n          <Icon className=\"h-6 w-6\" />\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n\nexport default function OverviewCards({ data }: OverviewCardsProps) {\n  const portfolioValue = data?.portfolioValue || 2400000;\n  const portfolioChange = data?.portfolioChange || 3.2;\n  const riskLevel = data?.riskLevel || 'Medium';\n  const activeForecasts = data?.activeForecasts || 12;\n  const accuracy = data?.accuracy || 87.5;\n  const lastUpdate = data?.lastUpdate || '2 minutes ago';\n\n  // Determine risk color\n  const getRiskColor = (level: string): 'green' | 'amber' | 'red' => {\n    switch (level.toLowerCase()) {\n      case 'low': return 'green';\n      case 'medium': return 'amber';\n      case 'high': return 'red';\n      default: return 'amber';\n    }\n  };\n\n  const getRiskIcon = (level: string) => {\n    switch (level.toLowerCase()) {\n      case 'low': return ShieldCheckIcon;\n      case 'medium': return ExclamationTriangleIcon;\n      case 'high': return ExclamationTriangleIcon;\n      default: return ExclamationTriangleIcon;\n    }\n  };\n\n  const cards = [\n    {\n      title: 'Portfolio Value',\n      value: numeral(portfolioValue).format('$0.0a'),\n      change: portfolioChange,\n      icon: CurrencyDollarIcon,\n      color: portfolioChange >= 0 ? 'green' : 'red',\n      subtitle: `${portfolioChange >= 0 ? 'Gain' : 'Loss'} since last week`,\n      trend: portfolioChange >= 0 ? 'up' : 'down'\n    },\n    {\n      title: 'Risk Level',\n      value: riskLevel,\n      icon: getRiskIcon(riskLevel),\n      color: getRiskColor(riskLevel),\n      subtitle: 'Based on current allocation'\n    },\n    {\n      title: 'Active Forecasts',\n      value: activeForecasts,\n      icon: ChartBarIcon,\n      color: 'blue',\n      subtitle: 'AI-powered predictions'\n    },\n    {\n      title: 'Forecast Accuracy',\n      value: `${accuracy}%`,\n      change: accuracy > 85 ? 2.1 : accuracy > 70 ? -1.2 : -5.4,\n      icon: TrendingUpIcon,\n      color: accuracy > 85 ? 'green' : accuracy > 70 ? 'amber' : 'red',\n      subtitle: 'Last 30 days performance'\n    }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Main Metrics Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        {cards.map((card, index) => (\n          <motion.div\n            key={card.title}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: index * 0.1 }}\n          >\n            <MetricCard\n              title={card.title}\n              value={card.value}\n              change={card.change}\n              icon={card.icon}\n              color={card.color as any}\n              subtitle={card.subtitle}\n              trend={card.trend as any}\n            />\n          </motion.div>\n        ))}\n      </div>\n\n      {/* Detailed Summary Cards */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Portfolio Summary */}\n        <motion.div\n          initial={{ opacity: 0, x: -20 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ delay: 0.4 }}\n          className=\"bg-white rounded-lg shadow-soft border border-gray-200 p-6\"\n        >\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4 flex items-center\">\n            <CurrencyDollarIcon className=\"h-5 w-5 mr-2 text-blue-600\" />\n            Portfolio Summary\n          </h3>\n          \n          <div className=\"space-y-4\">\n            <div className=\"flex justify-between items-center py-2 border-b border-gray-100\">\n              <span className=\"text-sm text-gray-600\">Total Value</span>\n              <span className=\"text-sm font-medium text-gray-900\">\n                {numeral(portfolioValue).format('$0,0.00')}\n              </span>\n            </div>\n            \n            <div className=\"flex justify-between items-center py-2 border-b border-gray-100\">\n              <span className=\"text-sm text-gray-600\">24h Change</span>\n              <span className={`text-sm font-medium ${\n                portfolioChange >= 0 ? 'text-green-600' : 'text-red-600'\n              }`}>\n                {portfolioChange >= 0 ? '+' : ''}{numeral(portfolioValue * portfolioChange / 100).format('$0,0')}\n                ({portfolioChange >= 0 ? '+' : ''}{portfolioChange}%)\n              </span>\n            </div>\n            \n            <div className=\"flex justify-between items-center py-2 border-b border-gray-100\">\n              <span className=\"text-sm text-gray-600\">Assets</span>\n              <span className=\"text-sm font-medium text-gray-900\">8 active</span>\n            </div>\n            \n            <div className=\"flex justify-between items-center py-2\">\n              <span className=\"text-sm text-gray-600\">Last Rebalance</span>\n              <span className=\"text-sm font-medium text-gray-900\">3 days ago</span>\n            </div>\n          </div>\n        </motion.div>\n\n        {/* Recent Activity */}\n        <motion.div\n          initial={{ opacity: 0, x: 20 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ delay: 0.5 }}\n          className=\"bg-white rounded-lg shadow-soft border border-gray-200 p-6\"\n        >\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4 flex items-center\">\n            <ChartBarIcon className=\"h-5 w-5 mr-2 text-purple-600\" />\n            Recent Activity\n          </h3>\n          \n          <div className=\"space-y-3\">\n            <div className=\"flex items-start space-x-3\">\n              <div className=\"flex-shrink-0 w-2 h-2 bg-green-400 rounded-full mt-2\"></div>\n              <div className=\"flex-1 min-w-0\">\n                <p className=\"text-sm text-gray-900\">Bitcoin forecast generated</p>\n                <p className=\"text-xs text-gray-500\">5 minutes ago</p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start space-x-3\">\n              <div className=\"flex-shrink-0 w-2 h-2 bg-blue-400 rounded-full mt-2\"></div>\n              <div className=\"flex-1 min-w-0\">\n                <p className=\"text-sm text-gray-900\">Risk analysis completed</p>\n                <p className=\"text-xs text-gray-500\">12 minutes ago</p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start space-x-3\">\n              <div className=\"flex-shrink-0 w-2 h-2 bg-amber-400 rounded-full mt-2\"></div>\n              <div className=\"flex-1 min-w-0\">\n                <p className=\"text-sm text-gray-900\">High volatility alert triggered</p>\n                <p className=\"text-xs text-gray-500\">1 hour ago</p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start space-x-3\">\n              <div className=\"flex-shrink-0 w-2 h-2 bg-purple-400 rounded-full mt-2\"></div>\n              <div className=\"flex-1 min-w-0\">\n                <p className=\"text-sm text-gray-900\">Portfolio rebalancing suggested</p>\n                <p className=\"text-xs text-gray-500\">2 hours ago</p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"mt-4 pt-4 border-t border-gray-100\">\n            <p className=\"text-xs text-gray-500\">\n              Last updated: {lastUpdate}\n            </p>\n          </div>\n        </motion.div>\n      </div>\n    </div>\n  );\n}"