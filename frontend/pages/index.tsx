import React, { useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport { motion } from 'framer-motion';\nimport { Toaster } from 'react-hot-toast';\nimport DashboardLayout from '../components/layout/DashboardLayout';\nimport OverviewCards from '../components/dashboard/OverviewCards';\nimport ForecastPanel from '../components/forecast/ForecastPanel';\nimport RiskPanel from '../components/risk/RiskPanel';\nimport PortfolioPanel from '../components/portfolio/PortfolioPanel';\nimport HedgePanel from '../components/hedge/HedgePanel';\nimport { useDashboardData } from '../hooks/useDashboardData';\nimport LoadingSpinner from '../components/ui/LoadingSpinner';\nimport ErrorBoundary from '../components/ui/ErrorBoundary';\n\nexport default function Dashboard() {\n  const [activeTab, setActiveTab] = useState('overview');\n  const { data: dashboardData, isLoading, error } = useDashboardData();\n\n  const tabs = [\n    { id: 'overview', name: 'Overview', icon: 'üìä' },\n    { id: 'forecasts', name: 'Forecasts', icon: 'üîÆ' },\n    { id: 'risk', name: 'Risk Analysis', icon: '‚ö†Ô∏è' },\n    { id: 'portfolio', name: 'Portfolio', icon: 'üíº' },\n    { id: 'hedge', name: 'Hedge Suggestions', icon: 'üõ°Ô∏è' }\n  ];\n\n  if (isLoading) {\n    return (\n      <DashboardLayout>\n        <div className=\"flex items-center justify-center h-96\">\n          <LoadingSpinner size=\"large\" />\n        </div>\n      </DashboardLayout>\n    );\n  }\n\n  if (error) {\n    return (\n      <DashboardLayout>\n        <div className=\"flex items-center justify-center h-96\">\n          <div className=\"text-center\">\n            <div className=\"text-6xl mb-4\">‚ùå</div>\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Dashboard Error</h2>\n            <p className=\"text-gray-600 mb-4\">{error.message}</p>\n            <button \n              onClick={() => window.location.reload()}\n              className=\"px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700\"\n            >\n              Retry\n            </button>\n          </div>\n        </div>\n      </DashboardLayout>\n    );\n  }\n\n  return (\n    <>\n      <Head>\n        <title>Treasury Risk Dashboard - AI-Powered Financial Analytics</title>\n        <meta name=\"description\" content=\"Comprehensive treasury management with AI-powered forecasting, risk analysis, and hedge suggestions.\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <DashboardLayout>\n        <div className=\"space-y-6\">\n          {/* Header */}\n          <div className=\"bg-white shadow-soft rounded-lg p-6\">\n            <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n              <div>\n                <h1 className=\"text-3xl font-bold text-gray-900\">Treasury Risk Dashboard</h1>\n                <p className=\"mt-1 text-sm text-gray-500\">\n                  AI-powered forecasting and risk management for treasury operations\n                </p>\n              </div>\n              <div className=\"mt-4 sm:mt-0\">\n                <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\n                  <div className=\"flex items-center\">\n                    <div className=\"w-2 h-2 bg-green-400 rounded-full mr-2\"></div>\n                    Live Data\n                  </div>\n                  <span>‚Ä¢</span>\n                  <span>Last updated: {new Date().toLocaleTimeString()}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Tab Navigation */}\n          <div className=\"bg-white shadow-soft rounded-lg\">\n            <div className=\"border-b border-gray-200\">\n              <nav className=\"-mb-px flex space-x-8 px-6\" aria-label=\"Tabs\">\n                {tabs.map((tab) => (\n                  <button\n                    key={tab.id}\n                    onClick={() => setActiveTab(tab.id)}\n                    className={`\n                      flex items-center space-x-2 py-4 px-1 border-b-2 font-medium text-sm\n                      ${activeTab === tab.id\n                        ? 'border-primary-500 text-primary-600'\n                        : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                      }\n                    `}\n                  >\n                    <span className=\"text-lg\">{tab.icon}</span>\n                    <span>{tab.name}</span>\n                  </button>\n                ))}\n              </nav>\n            </div>\n\n            {/* Tab Content */}\n            <div className=\"p-6\">\n              <ErrorBoundary>\n                <motion.div\n                  key={activeTab}\n                  initial={{ opacity: 0, y: 10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.3 }}\n                >\n                  {activeTab === 'overview' && (\n                    <div className=\"space-y-6\">\n                      <OverviewCards data={dashboardData} />\n                      \n                      {/* Quick Actions */}\n                      <div className=\"bg-gray-50 rounded-lg p-6\">\n                        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Quick Actions</h3>\n                        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                          <button\n                            onClick={() => setActiveTab('forecasts')}\n                            className=\"flex items-center p-4 bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow border border-gray-200 hover:border-primary-300\"\n                          >\n                            <div className=\"text-2xl mr-3\">üîÆ</div>\n                            <div className=\"text-left\">\n                              <div className=\"font-medium text-gray-900\">Generate Forecast</div>\n                              <div className=\"text-sm text-gray-500\">Create 30-day price predictions</div>\n                            </div>\n                          </button>\n                          \n                          <button\n                            onClick={() => setActiveTab('risk')}\n                            className=\"flex items-center p-4 bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow border border-gray-200 hover:border-primary-300\"\n                          >\n                            <div className=\"text-2xl mr-3\">‚ö†Ô∏è</div>\n                            <div className=\"text-left\">\n                              <div className=\"font-medium text-gray-900\">Analyze Risk</div>\n                              <div className=\"text-sm text-gray-500\">Calculate portfolio metrics</div>\n                            </div>\n                          </button>\n                          \n                          <button\n                            onClick={() => setActiveTab('hedge')}\n                            className=\"flex items-center p-4 bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow border border-gray-200 hover:border-primary-300\"\n                          >\n                            <div className=\"text-2xl mr-3\">üõ°Ô∏è</div>\n                            <div className=\"text-left\">\n                              <div className=\"font-medium text-gray-900\">Get Hedge Suggestions</div>\n                              <div className=\"text-sm text-gray-500\">Optimize portfolio allocation</div>\n                            </div>\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  \n                  {activeTab === 'forecasts' && <ForecastPanel />}\n                  {activeTab === 'risk' && <RiskPanel />}\n                  {activeTab === 'portfolio' && <PortfolioPanel />}\n                  {activeTab === 'hedge' && <HedgePanel />}\n                </motion.div>\n              </ErrorBoundary>\n            </div>\n          </div>\n        </div>\n      </DashboardLayout>\n      \n      <Toaster\n        position=\"top-right\"\n        toastOptions={{\n          duration: 4000,\n          style: {\n            background: '#363636',\n            color: '#fff',\n          },\n          success: {\n            duration: 3000,\n            style: {\n              background: '#10b981',\n            },\n          },\n          error: {\n            duration: 5000,\n            style: {\n              background: '#ef4444',\n            },\n          },\n        }}\n      />\n    </>\n  );\n}"