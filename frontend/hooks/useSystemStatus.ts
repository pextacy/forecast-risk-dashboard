import useSWR from 'swr';\nimport { api } from '../lib/api';\n\ninterface SystemStatus {\n  database: string;\n  services: {\n    ingestion?: string;\n    forecasting?: string;\n    risk_calculation?: string;\n    explainability?: string;\n  };\n  data_freshness: {\n    last_update?: string;\n    hours_ago?: number;\n    status: string;\n  };\n}\n\ninterface SystemStatusHook {\n  data: SystemStatus | undefined;\n  isLoading: boolean;\n  error: any;\n  mutate: () => void;\n}\n\nconst fetcher = async () => {\n  const response = await api.getStatus();\n  return response.data;\n};\n\nexport function useSystemStatus(): SystemStatusHook {\n  const { data, error, isLoading, mutate } = useSWR<SystemStatus>(\n    'system-status',\n    fetcher,\n    {\n      refreshInterval: 30000, // Refresh every 30 seconds\n      revalidateOnFocus: true,\n      revalidateOnReconnect: true,\n      errorRetryCount: 3,\n      errorRetryInterval: 5000,\n    }\n  );\n\n  return {\n    data,\n    isLoading,\n    error,\n    mutate,\n  };\n}"